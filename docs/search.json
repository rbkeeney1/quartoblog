[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ryan Keeney",
    "section": "",
    "text": "Ryan Keeney is the Data Science graduate from Georgia Tech with experience in R, Python, and SQL. When not innovating on data platforms, Ryan enjoys spending time traveling, teaching, volunteering, and spending quality time with family and friends.\n\n\nGeorgia Institute of Technology | Atlanta, GA\nMaster of Science in Analytics | January 2021 - December 2022\nUniversity of Michigan | Ann Arbor, MI\nBSE in Mechanical Engineering | Sept 2009 - April 2014\n\n\n\nJohn Deere | Product Design Engineer, Product Marketing Manager | May 2014 - June 2020\nAmerican School of Asuncion | Math and Science Teacher | Sept 2012 - April 2018\nFF Astronauts | Director of Data Analytics | June 2020 - Present\nAdditional Experience | Chrysler FIAT, Toyota, Commnet, Gates Corporation"
  },
  {
    "objectID": "posts/avatar_vader.html",
    "href": "posts/avatar_vader.html",
    "title": "Avatar VADER Sentiment Analysis",
    "section": "",
    "text": "The August 12, 2020 TidyTuesday dataset presents a perfect opportunity to try out the {vader} package which can be used for native language processing.\nMy goal was to analyze character sentiment by breaking down each character’s lines and running them through vader. Here are a few questions that I hoped to answer along the way:\n\nWho are the most positive characters?\nWho are the most negative characters?\nDoes character sentiment change over the duration of the series?\n\nI also wanted to explore a few new concepts such as the unique piping operators in {magrittr}, {tvthemes}, fonts, customizing themes, and improving my plot annotations. And while I wanted to make a word cloud in the shape of Appa - that’s going to have to wait until next time."
  },
  {
    "objectID": "posts/avatar_vader.html#initial-libraries-and-load-data",
    "href": "posts/avatar_vader.html#initial-libraries-and-load-data",
    "title": "Avatar VADER Sentiment Analysis",
    "section": "Initial libraries and load data",
    "text": "Initial libraries and load data\nThe first set of libraries to load are as follows. I do load a few font and theme libraries later. But, if you want to use vader this will get you started.\n\nlibrary(tidytuesdayR) # to get data quickly\nlibrary(tidyverse) # no matter how dark, there is always hope\nlibrary(magrittr) # for some more unique piping options\nlibrary(sentimentr) # for getting sentences\nlibrary(vader) # for vader sentiment scores\n\nAs always, TidyTuesday makes it easy to get the data.\n\ntuesdata <- tidytuesdayR::tt_load('2020-08-11')\n\n--- Compiling #TidyTuesday Information for 2020-08-11 ----\n\n\n--- There are 2 files available ---\n\n\n--- Starting Download ---\n\n\n\n    Downloading file 1 of 2: `avatar.csv`\n    Downloading file 2 of 2: `scene_description.csv`\n\n\n--- Download complete ---\n\navatar <- tuesdata$avatar\n\nLet’s take a quick look at what is included in this dataset. It’s the script to each episode, including the writer, director, and IMDB episode - however, we’re going to focus on what the characters are speaking.\n\ntibble::tribble(\n             ~variable,      ~class,                                    ~description,\n                  \"id\",   \"integer\",                         \"Unique Row identifier\",\n                \"book\", \"character\",                                     \"Book name\",\n            \"book_num\",   \"integer\",                                   \"Book number\",\n             \"chapter\", \"character\",                                  \"Chapter name\",\n         \"chapter_num\",   \"integer\",                                  \"Chapter Name\",\n           \"character\", \"character\",                            \"Character speaking\",\n           \"full_text\", \"character\", \"Full text (scene description, character text)\",\n     \"character_words\", \"character\",                   \"Text coming from characters\",\n              \"writer\", \"character\",                                \"Writer of book\",\n            \"director\", \"character\",                           \"Director of episode\",\n         \"imdb_rating\",    \"double\",                       \"IMDB rating for episode\"\n     ) %>% knitr::kable()\n\n\n\n\n\n\n\n\n\nvariable\nclass\ndescription\n\n\n\n\nid\ninteger\nUnique Row identifier\n\n\nbook\ncharacter\nBook name\n\n\nbook_num\ninteger\nBook number\n\n\nchapter\ncharacter\nChapter name\n\n\nchapter_num\ninteger\nChapter Name\n\n\ncharacter\ncharacter\nCharacter speaking\n\n\nfull_text\ncharacter\nFull text (scene description, character text)\n\n\ncharacter_words\ncharacter\nText coming from characters\n\n\nwriter\ncharacter\nWriter of book\n\n\ndirector\ncharacter\nDirector of episode\n\n\nimdb_rating\ndouble\nIMDB rating for episode"
  },
  {
    "objectID": "posts/avatar_vader.html#who-speaks-the-most-often",
    "href": "posts/avatar_vader.html#who-speaks-the-most-often",
    "title": "Avatar VADER Sentiment Analysis",
    "section": "Who speaks the most often?",
    "text": "Who speaks the most often?\nFirst, I ran a quick line of code to see who talked the most often and if I need to clean it up a bit. Looks like I'm going to have to remove the \"Scene Description\". Additionally, I plan on picking a subset of the characters to plot later and I want to see who speaks enough to be included.\n\navatar %>% group_by(character) %>% summarize(n=n())%>% arrange(-n) %>% head(20) %>% knitr::kable()\n\n\n\n\ncharacter\nn\n\n\n\n\nScene Description\n3393\n\n\nAang\n1796\n\n\nSokka\n1639\n\n\nKatara\n1437\n\n\nZuko\n776\n\n\nToph\n507\n\n\nIroh\n337\n\n\nAzula\n211\n\n\nJet\n134\n\n\nSuki\n114\n\n\nZhao\n107\n\n\nMai\n82\n\n\nHakoda\n77\n\n\nRoku\n67\n\n\nTy Lee\n64\n\n\nOzai\n59\n\n\nBumi\n55\n\n\nYue\n53\n\n\nHama\n49\n\n\nWarden\n49"
  },
  {
    "objectID": "posts/avatar_vader.html#data-prep",
    "href": "posts/avatar_vader.html#data-prep",
    "title": "Avatar VADER Sentiment Analysis",
    "section": "Data Prep",
    "text": "Data Prep\nThanks to Avery Robbins for dataset {appa} there isn't much cleaning do be done, I only removed the \"Scene Description\". Since I'm also trying to get used to using the magrittr %<>% assignment-piping operator, this was a is was a good opportunity to start.\n\navatar_clean <- avatar \navatar_clean %<>% filter(character != \"Scene Description\") %>% select(id:character,character_words)"
  },
  {
    "objectID": "posts/avatar_vader.html#vader-compound-scores",
    "href": "posts/avatar_vader.html#vader-compound-scores",
    "title": "Avatar VADER Sentiment Analysis",
    "section": "VADER compound scores",
    "text": "VADER compound scores\nLuke, I am your Father. You can read more about it vader here: PDF. While it is designed for social media, it also aligns pretty well with my priors about the characters.\n\nStep 1: Sentences. Yip yip!\nI'm going to include my code I used to check my process along the way. Here, I check to make sure get_sentences() is working.\n\navatar_clean %>% head(5) %>% get_sentences() %>% knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nbook\nbook_num\nchapter\nchapter_num\ncharacter\ncharacter_words\nelement_id\nsentence_id\n\n\n\n\n1\nWater\n1\nThe Boy in the Iceberg\n1\nKatara\nWater.\n1\n1\n\n\n1\nWater\n1\nThe Boy in the Iceberg\n1\nKatara\nEarth.\n1\n2\n\n\n1\nWater\n1\nThe Boy in the Iceberg\n1\nKatara\nFire.\n1\n3\n\n\n1\nWater\n1\nThe Boy in the Iceberg\n1\nKatara\nAir.\n1\n4\n\n\n1\nWater\n1\nThe Boy in the Iceberg\n1\nKatara\nMy grandmother used to tell me stories about the old days: a time of peace when the Avatar kept balance between the Water Tribes, Earth Kingdom, Fire Nation and Air Nomads.\n1\n5\n\n\n1\nWater\n1\nThe Boy in the Iceberg\n1\nKatara\nBut that all changed when the Fire Nation attacked.\n1\n6\n\n\n1\nWater\n1\nThe Boy in the Iceberg\n1\nKatara\nOnly the Avatar mastered all four elements; only he could stop the ruthless firebenders.\n1\n7\n\n\n1\nWater\n1\nThe Boy in the Iceberg\n1\nKatara\nBut when the world needed him most, he vanished.\n1\n8\n\n\n1\nWater\n1\nThe Boy in the Iceberg\n1\nKatara\nA hundred years have passed, and the Fire Nation is nearing victory in the war.\n1\n9\n\n\n1\nWater\n1\nThe Boy in the Iceberg\n1\nKatara\nTwo years ago, my father and the men of my tribe journeyed to the Earth Kingdom to help fight against the Fire Nation, leaving me and my brother to look after our tribe.\n1\n10\n\n\n1\nWater\n1\nThe Boy in the Iceberg\n1\nKatara\nSome people believe that the Avatar was never reborn into the Air Nomads and that the cycle is broken, but I haven’t lost hope.\n1\n11\n\n\n1\nWater\n1\nThe Boy in the Iceberg\n1\nKatara\nI still believe that, somehow, the Avatar will return to save the world.\n1\n12\n\n\n3\nWater\n1\nThe Boy in the Iceberg\n1\nSokka\nIt’s not getting away from me this time.\n2\n1\n\n\n3\nWater\n1\nThe Boy in the Iceberg\n1\nSokka\nWatch and learn, Katara.\n2\n2\n\n\n3\nWater\n1\nThe Boy in the Iceberg\n1\nSokka\nThis is how you catch a fish.\n2\n3\n\n\n5\nWater\n1\nThe Boy in the Iceberg\n1\nKatara\nSokka, look!\n3\n1\n\n\n6\nWater\n1\nThe Boy in the Iceberg\n1\nSokka\nSshh!\n4\n1\n\n\n6\nWater\n1\nThe Boy in the Iceberg\n1\nSokka\nKatara, you’re going to scare it away.\n4\n2\n\n\n6\nWater\n1\nThe Boy in the Iceberg\n1\nSokka\nMmmm …\n4\n3\n\n\n6\nWater\n1\nThe Boy in the Iceberg\n1\nSokka\nI can already smell it cookin’.\n4\n4\n\n\n8\nWater\n1\nThe Boy in the Iceberg\n1\nKatara\nBut, Sokka!\n5\n1\n\n\n8\nWater\n1\nThe Boy in the Iceberg\n1\nKatara\nI caught one!\n5\n2\n\n\n\n\n\nOkay, it works. Run it.\n\navatar_sentences <- avatar_clean %>% get_sentences()\n\n\n\n\nStep 2: Check structure and test VADER\nCheck the structure of avatar_sentences to setup VADER properly\n\nglimpse(avatar_sentences)\n\nRows: 18,440\nColumns: 9\n$ id              <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 5, 6, 6, ~\n$ book            <chr> \"Water\", \"Water\", \"Water\", \"Water\", \"Water\", \"Water\", ~\n$ book_num        <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ~\n$ chapter         <chr> \"The Boy in the Iceberg\", \"The Boy in the Iceberg\", \"T~\n$ chapter_num     <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, ~\n$ character       <chr> \"Katara\", \"Katara\", \"Katara\", \"Katara\", \"Katara\", \"Kat~\n$ character_words <gt_sntnc> \"Water.\", \"Earth.\", \"Fire.\", \"Air.\", \"My grandmot~\n$ element_id      <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 3, 4, 4, ~\n$ sentence_id     <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 1, 1, ~\n\n\nNow for a trial run of vader_df()… notice we can pull out the the $compound column, I'll use that when I bind the data back into the avatar_sentences dataset.\n\navatar_sentences$character_words %>% head(5) %>% vader_df() %>% knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\ntext\nword_scores\ncompound\npos\nneu\nneg\nbut_count\n\n\n\n\nWater.\n{0}\n0.000\n0.0\n1.000\n0.000\n0\n\n\nEarth.\n{0}\n0.000\n0.0\n1.000\n0.000\n0\n\n\nFire.\n{-1.4}\n-0.340\n0.0\n0.000\n1.000\n0\n\n\nAir.\n{0}\n0.000\n0.0\n1.000\n0.000\n0\n\n\nMy grandmother used to tell me stories about the old days: a time of peace when the Avatar kept balance between the Water Tribes, Earth Kingdom, Fire Nation and Air Nomads.\n{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2.5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1.4, 0, 0, 0, 0}\n0.273\n0.1\n0.831\n0.069\n0\n\n\n\n\n\n\n\nStep 3: Cross fingers, Run Vader, Make Coffee\nRunning it on all the sentences takes a bit of time. Go make coffee. Check Twitter. Pet the dog.\n\nptm <- proc.time() # Start the clock!\nvader_comp <- avatar_sentences$character_words %>% vader_df() %>% select(compound)\n\nWarning in sentiments[i] <- senti_valence(wpe, i, item): number of items to\nreplace is not a multiple of replacement length\n\nproc.time() - ptm # Calc time\n\n   user  system elapsed \n 101.12   28.54  154.94 \n\n#note, set \"cache=TRUE\" and save some time!\n\nInspect the results\n\n# check it visually\nvader_comp %>% arrange(-compound) %>% head(5)\n\n  compound\n1    0.965\n2    0.944\n3    0.939\n4    0.931\n5    0.927\n\nvader_comp %>% arrange(-compound) %>% tail(5)\n\n      compound\n18436   -0.916\n18437   -0.926\n18438   -0.927\n18439   -0.947\n18440   -0.951\n\n# Any failures?\nvader_comp %>% filter(is.na(compound)) # no NAs\n\n[1] compound\n<0 rows> (or 0-length row.names)\n\nvader_comp %>% filter(is.nan(compound)) # no NaNs\n\n[1] compound\n<0 rows> (or 0-length row.names)\n\n# check dims before binding\ndim(vader_comp)\n\n[1] 18440     1\n\ndim(avatar_sentences)\n\n[1] 18440     9\n\n\n\n\nStep 4: Bind\nTime to add the compound vader score back into our dataset and look at the top 10 instances (again). I could have done this code much more condensed; but, I kept it separated so you follow the process.\n\navatar_sentences %<>% cbind(vader_comp)\navatar_sentences %>% head(5) %>% knitr::kable()\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nid\nbook\nbook_num\nchapter\nchapter_num\ncharacter\ncharacter_words\nelement_id\nsentence_id\ncompound\n\n\n\n\n1\nWater\n1\nThe Boy in the Iceberg\n1\nKatara\nWater.\n1\n1\n0.000\n\n\n1\nWater\n1\nThe Boy in the Iceberg\n1\nKatara\nEarth.\n1\n2\n0.000\n\n\n1\nWater\n1\nThe Boy in the Iceberg\n1\nKatara\nFire.\n1\n3\n-0.340\n\n\n1\nWater\n1\nThe Boy in the Iceberg\n1\nKatara\nAir.\n1\n4\n0.000\n\n\n1\nWater\n1\nThe Boy in the Iceberg\n1\nKatara\nMy grandmother used to tell me stories about the old days: a time of peace when the Avatar kept balance between the Water Tribes, Earth Kingdom, Fire Nation and Air Nomads.\n1\n5\n0.273\n\n\n\n\n\nLooks good!"
  },
  {
    "objectID": "posts/avatar_vader.html#plot-prep",
    "href": "posts/avatar_vader.html#plot-prep",
    "title": "Avatar VADER Sentiment Analysis",
    "section": "Plot Prep",
    "text": "Plot Prep\nAs I prepare to make some plots there are few things I’d like to have available:\n\nAn “episode” number so I can sort and chart books 1-3 because chapter numbers are repeated within each book\nReordered characters - based on their median vader score so that the plots look nice.\n\n\n# create new sequence number for each chapter, because chapter number is repeated within each book\nunique(avatar_sentences$chapter_num)\n\n [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21\n\n# add episode_num\navatar_sentences %<>% \n     mutate(episode_num = case_when(\n          book_num == 1 ~ chapter_num,\n          book_num == 2 ~ chapter_num + 21,\n          book_num == 3 ~ chapter_num + 42\n     ))\n\n# add in character vader compound median to sort\navatar_sentences %<>% \n     group_by(character) %>% \n     mutate(char_vader_mean = median(compound[compound != 0])) %>% \n     ungroup() %>% \n     mutate(character = fct_reorder(character, -char_vader_mean))"
  },
  {
    "objectID": "posts/avatar_vader.html#section-1",
    "href": "posts/avatar_vader.html#section-1",
    "title": "Avatar VADER Sentiment Analysis",
    "section": "",
    "text": "Fonts and Themes\nI'm very new to themes and fonts, so not everything worked as well as I'd like. I ended up using some fonts from Google Fonts referenced this excellent blog post by Cédric Scherer.\n\nlibrary(tvthemes) # great ggplot themes and color palettes\n\nWarning: package 'tvthemes' was built under R version 4.1.3\n\nlibrary(showtext) # use fonts from google\n\nWarning: package 'showtext' was built under R version 4.1.1\n\n\nLoading required package: sysfonts\n\n\nWarning: package 'sysfonts' was built under R version 4.1.1\n\n\nLoading required package: showtextdb\n\nlibrary(extrafont) # use computer fonts\n\nWarning: package 'extrafont' was built under R version 4.1.3\n\n\nRegistering fonts with R\n\n\n\nAttaching package: 'extrafont'\n\n\nThe following object is masked from 'package:showtextdb':\n\n    font_install\n\n#font_import()\nimport_avatar() # import \"Slayer\" font, will need to loadfonts() to access\n\nYou should install these fonts on your system directly. The files are located in [C:/Users/keene/Documents/R/win-library/4.1/tvthemes/fonts/Slayer]\n\nloadfonts(device = \"win\") # Load fonts, can take a minute\n\n# with {showtext}, you can load directly from google fonts\nfont_add_google(\"Indie Flower\", \"Indie Flower\")\n\n# Check the current search path for fonts\n#font_paths() \n\n# List available font files in the search path\n#font_files() \n\n# syntax: font_add(family = \"<family_name>\", regular = \"/path/to/font/file\")\n#font_add(\"Palatino\", \"pala.ttf\")\n\n#font_families()\n\nshowtext_auto()"
  },
  {
    "objectID": "posts/avatar_vader.html#ggplot-bending",
    "href": "posts/avatar_vader.html#ggplot-bending",
    "title": "Avatar VADER Sentiment Analysis",
    "section": "ggplot “Bending”",
    "text": "ggplot “Bending”\nCode for my primary plot, with comments.\nI should also note that I'm still working on developing my plot scaling abilities for rMarkdown, so this code might output the plots with small text for you if you scale up a too high. I often develop and save the plot (the code below), then load the image into the markdown.\n\np1 <- avatar_sentences %>% \n     filter(character %in% c(\"Aang\",\"Sokka\",\"Katara\",\"Zuko\",\"Toph\",\"Iroh\",\"Azula\",\"Jet\",\"Suki\",\"Mai\",\"Ty Lee\")) %>% # only wanted primary characters\n     filter(compound != 0) %>% # pulled out 0 scores, not sure if this is good process or not, but it helps with the viz and tell the story better.\n     ggplot(aes(x = character, y = compound, color = character)) +\n     geom_hline(aes(yintercept = 0), color = \"black\", size = 0.6) + # add line at zero (bc I pull all other lines out in the theme)\n     geom_jitter(position = position_jitter(seed = 2020,width = 0.25), size = 1, alpha = 0.15) + # add a jitter\n     #geom_boxplot(color = \"black\",stat = \"boxplot\",outlier.alpha = 0,fill=NA) + #pulled this out, decided to use the lollipops\n     geom_segment(aes(x = character, xend = character, y = 0, yend = char_vader_mean), size = 1.0,color = \"black\") + # line to zero from median\n     stat_summary(fun = stats::median, geom = \"point\", size = 5, color = \"black\") + # make a slightly bigger dot\n     stat_summary(fun = stats::median, geom = \"point\", size = 4) + # fill it in, I think i could have done this in 1x line with fill/color, but I couldn't figure it out quickly.\n     labs(\n          title = \"Water. Earth. Fire. Air. Vader.\",\n          subtitle = \"Analyzing The Setiment of Avatar's Primary Characters With Compound VADER Scores\",\n          y = \"Compound Vader Scores\",\n          x = NULL,\n          caption = \"Data {appa} by Avery Robbins \\nTidyTuesday 2020-08-11\\n@rbkeeney\"\n          ) +\n     annotate(\"text\", x = 8, y = 1, family = \"Indie Flower\", color = \"gray20\",lineheight = 0.5, size = 6,\n              label = \"Every circle represents a sentence spoken by the character.\\nA higher score correlates to positive sentiment, zero is neutral\"\n              ) +\n     annotate(\"text\", x = 1, y = 0.8, family = \"Indie Flower\", color = \"gray20\", lineheight = 0.5, size = 6,\n              label = \"Ty Lee and Iroh\\nwere the most\\npostive characters\"\n              ) +\n     annotate(\"text\", x = 1, y = -0.4, family = \"Indie Flower\", color = \"gray20\",lineheight = 0.5, size = 6,\n              label = \"All sentences \\nwith a compound \\nscore of 0 have \\nbeen removed\"\n              ) +\n     annotate(\"text\", x = 11, y = -0.8, family = \"Indie Flower\", color = \"gray20\",lineheight = 0.5, size = 6,\n              label = \"Mai was the only\\ncharacter with a \\nnegataive median \\nsentiment\"\n              ) + \n     theme_avatar(\n          title.font = \"Indie Flower\", # wanted to use slayer, but issues getting loaded.\n          text.font = \"Indie Flower\",\n          title.size = 36,\n          subtitle.size = 24\n     ) +\n     theme(\n          axis.title = element_text(size=24),\n          axis.text = element_text(size=24),\n          legend.position = \"none\", # remove legend\n          plot.caption = element_text(size = 16, color = \"grey20\",lineheight = 0.5), #update caption\n          panel.grid.major = element_blank(), # remove plot grids\n          panel.grid.minor = element_blank(), # remove plot grids\n          panel.border = element_rect(colour = \"black\",fill = NA), # box the plot. I like it. Fill = NA ~ no fill.\n          axis.line = element_line(colour = \"black\"),\n          )\n\n# match arrows to annotations... takes time, go arrow by arrow.\np1_arrows <- tibble(\n     x1 = c(1.0, 1.0, 8.5,1,10.6),\n     x2 = c(1.0, 2.0, 8.3,1,10.9),\n     y1 = c(0.67, 0.67, 0.9,-.25,-.65), \n     y2 = c(0.45, 0.38, 0.76,-.05,-.1)\n     )\n\n# combine into final plot\np1_final <- p1 + geom_curve(\n     data = p1_arrows, aes(x = x1, y = y1, xend = x2, yend = y2),\n     arrow = arrow(length = unit(0.07, \"inch\")), size = 0.4,\n     color = \"gray40\", curvature = -0.2\n     )\n\n# To create better pictures for the markdown (1) save it, and (2) then call it in markdown text with: ![alt text here](path-to-image-here)\n# for referecne, this is what roughly outputs on the screen, moving up dpi will shrink the text...\n# ggsave(p1_final, filename = \"figs/Rplot1.png\", dpi = 96, type = \"cairo\", width = 7, height = 5, units = \"in\")\n# dpi: 72-96 for web... 300-400 for high res stuff\n\n# save high res (uncomment)\n#ggsave(p1_final, filename = \"figs/Rplot1.png\", dpi = 300, type = \"cairo\", width = 7, height = 5, units = \"in\")\n\n# open high res, for iteration (comment out once done)\n# img_1 <- magick::image_read('figs/Rplot1.png')\n# print(img_1)\n\n\nFor the second plot, we use facet_wrap() to show how a few characters compound vadar scores over the duration fo the series.\n\np2 <- avatar_sentences %>% \n     filter(character %in% c(\"Aang\",\"Sokka\",\"Katara\",\"Zuko\",\"Toph\",\"Iroh\")) %>% \n     filter(compound != 0) %>% \n     #filter(book == \"Water\") %>% \n     ggplot(aes(x = episode_num, y = compound, color = character)) +\n     #geom_point(alpha = 0.6) +\n     #geom_jitter() +\n     geom_smooth(method = loess, se = F, formula = y ~ x) +\n     facet_wrap(~ character) + \n     coord_cartesian(ylim = c(0,0.3)) +\n     labs(\n          title = \"Water. Earth. Fire. Air. Vader.\",\n          subtitle = \"Analyzing The Change in Setiment Avatar's Primary Characters With Compound VADER Scores Over The Duration Of The Series\",\n          y = \"Compound VADER Scores\",\n          x = \"Nth Episode\",\n          caption = \"Data {appa} by Avery Robbins \\nTidyTuesday 2020-08-11\\n@rbkeeney\"\n          ) +\n     theme_avatar(\n          title.font = \"Indie Flower\",\n          title.size = 36,\n          text.font = \"Indie Flower\",\n          subtitle.size = 24,\n     ) +\n     theme(\n          text = element_text(size = 28, lineheight = 0.5),\n          axis.title = element_text(size=24),\n          axis.text = element_text(size=24),\n          legend.position = \"none\",\n          plot.caption = element_text(color = \"grey20\", size = 16),\n          panel.grid.major = element_blank(), \n          panel.grid.minor = element_blank(),\n          panel.border = element_rect(colour = \"black\",fill = NA),\n          axis.line = element_line(colour = \"black\")\n          )\n\n# uncomment to save\n#ggsave(p2, filename = \"figs/Rplot2.png\", dpi = 300, type = \"cairo\", width = 7, height = 5, units = \"in\") \n# open high res, for iteration (comment out once done)\n#img_2 <- magick::image_read('figs/Rplot2.png')\n#print(img_2)\n\n\nThat wraps it up! Cheers, Ryan"
  }
]